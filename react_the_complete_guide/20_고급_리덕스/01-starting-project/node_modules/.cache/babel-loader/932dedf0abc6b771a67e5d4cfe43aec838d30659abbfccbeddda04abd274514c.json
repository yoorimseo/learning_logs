{"ast":null,"code":"import { uiActions } from './ui-slice';\nexport const fetchCartData = () => {\n  return dispatch => {\n    const fetchData = async () => {\n      const response = await fetch('firebaseAddress/cart.json');\n    };\n  };\n};\n// 슬라이스 객체 외부에서 새 함수를 생성\nexport const sendCartData = cart => {\n  // 아직 리듀서에 도달하지 않았기 때문에, 디스패치를 실행하기 전에 비동기 코드와 side effect를 수행할 수 있음\n  return async dispatch => {\n    dispatch(uiActions.showNotification({\n      status: 'pending',\n      title: 'Sending...',\n      message: 'Sending cart data!'\n    }));\n    const sendRequest = async () => {\n      const response = await fetch('firebaseAddress/cart.json', {\n        method: 'PUT',\n        // POST와의 차이점은 세 데이터가 데이터 목록에 추가되지 않고, 기존의 데이터를 덮어쓴다는 것\n        body: JSON.stringify(cart)\n      });\n      if (!response.ok) {\n        throw new Error('Sending cart data failed.');\n      }\n    };\n    try {\n      await sendRequest();\n      dispatch(uiActions.showNotification({\n        status: 'success',\n        title: 'Success!',\n        message: 'Sending cart data successfully!'\n      }));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: 'error',\n        title: 'Error!',\n        message: 'Sending cart data failed!'\n      }));\n    }\n  };\n};","map":{"version":3,"names":["uiActions","fetchCartData","dispatch","fetchData","response","fetch","sendCartData","cart","showNotification","status","title","message","sendRequest","method","body","JSON","stringify","ok","Error","error"],"sources":["/Users/seoyurim/Documents/github/learning_logs/react_the_complete_guide/20_고급_리덕스/01-starting-project/src/store/cart-action.js"],"sourcesContent":["import { uiActions } from './ui-slice';\n\nexport const fetchCartData = () => {\n  return (dispatch) => {\n    const fetchData = async () => {\n      const response = await fetch('firebaseAddress/cart.json');\n    };\n  };\n};\n// 슬라이스 객체 외부에서 새 함수를 생성\nexport const sendCartData = (cart) => {\n  // 아직 리듀서에 도달하지 않았기 때문에, 디스패치를 실행하기 전에 비동기 코드와 side effect를 수행할 수 있음\n  return async (dispatch) => {\n    dispatch(\n      uiActions.showNotification({\n        status: 'pending',\n        title: 'Sending...',\n        message: 'Sending cart data!',\n      })\n    );\n\n    const sendRequest = async () => {\n      const response = await fetch('firebaseAddress/cart.json', {\n        method: 'PUT', // POST와의 차이점은 세 데이터가 데이터 목록에 추가되지 않고, 기존의 데이터를 덮어쓴다는 것\n        body: JSON.stringify(cart),\n      });\n\n      if (!response.ok) {\n        throw new Error('Sending cart data failed.');\n      }\n    };\n\n    try {\n      await sendRequest();\n\n      dispatch(\n        uiActions.showNotification({\n          status: 'success',\n          title: 'Success!',\n          message: 'Sending cart data successfully!',\n        })\n      );\n    } catch (error) {\n      dispatch(\n        uiActions.showNotification({\n          status: 'error',\n          title: 'Error!',\n          message: 'Sending cart data failed!',\n        })\n      );\n    }\n  };\n};\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,YAAY;AAEtC,OAAO,MAAMC,aAAa,GAAGA,CAAA,KAAM;EACjC,OAAQC,QAAQ,IAAK;IACnB,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,2BAA2B,CAAC;IAC3D,CAAC;EACH,CAAC;AACH,CAAC;AACD;AACA,OAAO,MAAMC,YAAY,GAAIC,IAAI,IAAK;EACpC;EACA,OAAO,MAAOL,QAAQ,IAAK;IACzBA,QAAQ,CACNF,SAAS,CAACQ,gBAAgB,CAAC;MACzBC,MAAM,EAAE,SAAS;MACjBC,KAAK,EAAE,YAAY;MACnBC,OAAO,EAAE;IACX,CAAC,CACH,CAAC;IAED,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,MAAMR,QAAQ,GAAG,MAAMC,KAAK,CAAC,2BAA2B,EAAE;QACxDQ,MAAM,EAAE,KAAK;QAAE;QACfC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACT,IAAI;MAC3B,CAAC,CAAC;MAEF,IAAI,CAACH,QAAQ,CAACa,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;MAC9C;IACF,CAAC;IAED,IAAI;MACF,MAAMN,WAAW,CAAC,CAAC;MAEnBV,QAAQ,CACNF,SAAS,CAACQ,gBAAgB,CAAC;QACzBC,MAAM,EAAE,SAAS;QACjBC,KAAK,EAAE,UAAU;QACjBC,OAAO,EAAE;MACX,CAAC,CACH,CAAC;IACH,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACdjB,QAAQ,CACNF,SAAS,CAACQ,gBAAgB,CAAC;QACzBC,MAAM,EAAE,OAAO;QACfC,KAAK,EAAE,QAAQ;QACfC,OAAO,EAAE;MACX,CAAC,CACH,CAAC;IACH;EACF,CAAC;AACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}