{"ast":null,"code":"var _jsxFileName = \"/Users/seoyurim/Documents/github/learning_logs/react_the_complete_guide/20_\\uACE0\\uAE09_\\uB9AC\\uB355\\uC2A4/01-starting-project/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const showCart = useSelector(state => state.ui.cartIsVisible);\n  const cart = useSelector(state => state.cart);\n  useEffect(() => {\n    const sendCartData = async () => {\n      const response = await fetch('firebaseAddress/cart.json', {\n        method: 'PUT',\n        // POST와의 차이점은 세 데이터가 데이터 목록에 추가되지 않고, 기존의 데이터를 덮어쓴다는 것\n        body: JSON.stringify(cart)\n      });\n      const responseData = await response.json();\n    };\n  }, [cart]); // 리덕스 스토어가 변경될 때마다 이 컴포넌트 함수가 다시 실행되고, 최신의 상태가 됨\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [showCart && /*#__PURE__*/_jsxDEV(Cart, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(Products, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"KyXbg3VUjMrWtfZdDW0tXImD8Js=\", false, function () {\n  return [useSelector, useSelector];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useSelector","Cart","Layout","Products","jsxDEV","_jsxDEV","App","_s","showCart","state","ui","cartIsVisible","cart","sendCartData","response","fetch","method","body","JSON","stringify","responseData","json","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/seoyurim/Documents/github/learning_logs/react_the_complete_guide/20_고급_리덕스/01-starting-project/src/App.js"],"sourcesContent":["import { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\n\nfunction App() {\n  const showCart = useSelector((state) => state.ui.cartIsVisible);\n  const cart = useSelector((state) => state.cart);\n\n  useEffect(() => {\n    const sendCartData = async () => {\n      const response = await fetch('firebaseAddress/cart.json', {\n        method: 'PUT', // POST와의 차이점은 세 데이터가 데이터 목록에 추가되지 않고, 기존의 데이터를 덮어쓴다는 것\n        body: JSON.stringify(cart),\n      });\n\n      const responseData = await response.json();\n    };\n  }, [cart]); // 리덕스 스토어가 변경될 때마다 이 컴포넌트 함수가 다시 실행되고, 최신의 상태가 됨\n\n  return (\n    <Layout>\n      {showCart && <Cart />}\n      <Products />\n    </Layout>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,WAAW,QAAQ,aAAa;AAEzC,OAAOC,IAAI,MAAM,wBAAwB;AACzC,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,QAAQ,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,QAAQ,GAAGR,WAAW,CAAES,KAAK,IAAKA,KAAK,CAACC,EAAE,CAACC,aAAa,CAAC;EAC/D,MAAMC,IAAI,GAAGZ,WAAW,CAAES,KAAK,IAAKA,KAAK,CAACG,IAAI,CAAC;EAE/Cb,SAAS,CAAC,MAAM;IACd,MAAMc,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,2BAA2B,EAAE;QACxDC,MAAM,EAAE,KAAK;QAAE;QACfC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,IAAI;MAC3B,CAAC,CAAC;MAEF,MAAMQ,YAAY,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;IAC5C,CAAC;EACH,CAAC,EAAE,CAACT,IAAI,CAAC,CAAC,CAAC,CAAC;;EAEZ,oBACEP,OAAA,CAACH,MAAM;IAAAoB,QAAA,GACJd,QAAQ,iBAAIH,OAAA,CAACJ,IAAI;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACrBrB,OAAA,CAACF,QAAQ;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEb;AAACnB,EAAA,CArBQD,GAAG;EAAA,QACON,WAAW,EACfA,WAAW;AAAA;AAAA2B,EAAA,GAFjBrB,GAAG;AAuBZ,eAAeA,GAAG;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}